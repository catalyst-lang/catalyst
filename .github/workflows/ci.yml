on:
  pull_request:
  push:
    branches:
      - main
      - poc

name: Continuous Integration

env:
  LLVM_VER: 15.0.6

jobs:
  unix:
    strategy:
      fail-fast: true
      matrix:
        platform: [ubuntu-22.04]
        cxx_compiler: [clang++-14]
        include:
          - platform: macos-latest
            cxx_compiler: "$(brew --prefix llvm@${LLVM_VER%%.*})/bin/clang++"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          # ninja version to download. Default: 1.10.0
          version: 1.10.0

      - name: Install Linux dependencies
        if: ${{ matrix.platform == 'ubuntu-22.04' }}
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${LLVM_VER%%.*}
          echo "LLVM_DIR=/usr/lib/llvm-${LLVM_VER%%.*}" >> $GITHUB_ENV

      - name: Install macOS dependencies
        if: ${{ matrix.platform == 'macos-latest' }}
        run: |
          brew install coreutils llvm@${LLVM_VER%%.*}
          echo "LLVM_DIR=/usr/local/opt/llvm" >> $GITHUB_ENV

      - name: Configure
        run: cmake -GNinja -B build -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }} -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build

      - name: Test parser
        run: ./build/toolchain/parser/test-parser --force-colors=true --success
      - name: Test compiler
        run: ./build/toolchain/compiler/test-compiler --force-colors=true --success

  windows:
    strategy:
      fail-fast: true

    runs-on: windows-latest

    steps:
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v3
      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          # ninja version to download. Default: 1.10.0
          version: 1.10.0

      - name: Setup LLVM libraries
        shell: cmd
        run: |
          curl -L https://github.com/catalyst-lang/llvm-windows-builds/releases/download/llvmorg-%LLVM_VER%/llvmorg-%LLVM_VER%-dev-win64.zip --output llvm.zip
          dir
          7z x llvm.zip

      - name: Configure CMake
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          set LLVM_DIR=%GITHUB_WORKSPACE%\llvm-build\lib\cmake
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cmake --build build

      - name: Test parser
        run: .\build\toolchain\parser\test-parser.exe --force-colors=true --success
      - name: Test compiler
        run: .\build\toolchain\compiler\test-compiler.exe --force-colors=true --success
